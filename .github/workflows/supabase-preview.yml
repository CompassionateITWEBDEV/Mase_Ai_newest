name: Supabase Preview Branch

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - development

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    environment: 
      name: preview-${{ github.event.pull_request.number }}
      url: ${{ steps.deploy.outputs.preview_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Create Preview Branch
        id: deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # Set branch name for preview
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          echo "Creating preview branch for PR #${PR_NUMBER}"
          echo "Branch: ${BRANCH_NAME}"
          
          # Link to Supabase project
          supabase link --project-ref $SUPABASE_PROJECT_ID
          
          # Create or update the preview branch
          supabase branches create "preview-pr-${PR_NUMBER}" \
            --experimental \
            --git-branch="${BRANCH_NAME}" || true
          
          # Get the preview URL
          PREVIEW_URL=$(supabase branches list --format=json | jq -r --arg branch "preview-pr-${PR_NUMBER}" '.[] | select(.name == $branch) | .database_url')
          
          echo "preview_url=${PREVIEW_URL}" >> $GITHUB_OUTPUT
          echo "Preview branch created: ${PREVIEW_URL}"

      - name: Build and Test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ steps.deploy.outputs.preview_url }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          npm run build
          npm run test --if-present

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const previewUrl = '${{ steps.deploy.outputs.preview_url }}';
            
            const comment = `ðŸš€ **Preview Branch Deployed**
            
            Your Supabase preview branch is ready!
            
            - **Preview Database**: ${previewUrl}
            - **PR**: #${prNumber}
            - **Branch**: \`${{ github.event.pull_request.head.ref }}\`
            
            The preview branch will be automatically updated when you push new commits to this PR.`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Delete Preview Branch
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          echo "Cleaning up preview branch for PR #${PR_NUMBER}"
          
          # Link to Supabase project
          supabase link --project-ref $SUPABASE_PROJECT_ID
          
          # Delete the preview branch
          supabase branches delete "preview-pr-${PR_NUMBER}" --experimental || true
          
          echo "Preview branch cleaned up"

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            
            const comment = `ðŸ§¹ **Preview Branch Cleaned Up**
            
            The Supabase preview branch for PR #${prNumber} has been deleted.`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });