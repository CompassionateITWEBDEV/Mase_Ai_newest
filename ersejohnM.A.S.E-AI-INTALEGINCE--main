[1mdiff --git a/app/referral-management/page.tsx b/app/referral-management/page.tsx[m
[1mindex 8fcad27..bfb47d7 100644[m
[1m--- a/app/referral-management/page.tsx[m
[1m+++ b/app/referral-management/page.tsx[m
[36m@@ -236,7 +236,17 @@[m [mexport default function ReferralManagementPage() {[m
         },[m
       }))[m
 [m
[31m-      setReferrals((prev) => [...convertedReferrals, ...prev])[m
[32m+[m[32m      // Save to database[m
[32m+[m[32m      for (const convertedReferral of convertedReferrals) {[m
[32m+[m[32m        await fetch("/api/referrals", {[m
[32m+[m[32m          method: "POST",[m
[32m+[m[32m          headers: { "Content-Type": "application/json" },[m
[32m+[m[32m          body: JSON.stringify(convertedReferral),[m
[32m+[m[32m        })[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // Refetch all referrals from database[m
[32m+[m[32m      await fetchReferrals()[m
       setExtendedCareStatus("connected")[m
       setLastSyncTime(new Date().toLocaleString())[m
     } catch (error) {[m
[36m@@ -274,25 +284,55 @@[m [mexport default function ReferralManagementPage() {[m
     }[m
   }[m
 [m
[31m-  const handleApprove = (id: string) => {[m
[31m-    setReferrals((prev) =>[m
[31m-      prev.map((r) => {[m
[31m-        if (r.id === id) {[m
[31m-          const socDueDate = new Date()[m
[31m-          socDueDate.setDate(socDueDate.getDate() + 5) // Set SOC due in 5 days[m
[31m-          return { ...r, status: "Approved", socDueDate: socDueDate.toISOString().split("T")[0] }[m
[31m-        }[m
[31m-        return r[m
[31m-      }),[m
[31m-    )[m
[32m+[m[32m  const handleApprove = async (id: string) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      const socDueDate = new Date()[m
[32m+[m[32m      socDueDate.setDate(socDueDate.getDate() + 5) // Set SOC due in 5 days[m
[32m+[m[41m      [m
[32m+[m[32m      const response = await fetch(`/api/referrals/${id}`, {[m
[32m+[m[32m        method: "PATCH",[m
[32m+[m[32m        headers: { "Content-Type": "application/json" },[m
[32m+[m[32m        body: JSON.stringify({ status: "Approved", socDueDate: socDueDate.toISOString().split("T")[0] }),[m
[32m+[m[32m      })[m
[32m+[m
[32m+[m[32m      if (response.ok) {[m
[32m+[m[32m        await fetchReferrals()[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Failed to approve referral:", error)[m
[32m+[m[32m    }[m
   }[m
 [m
[31m-  const handleDeny = (id: string) => {[m
[31m-    setReferrals((prev) => prev.map((r) => (r.id === id ? { ...r, status: "Denied" } : r)))[m
[32m+[m[32m  const handleDeny = async (id: string) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      const response = await fetch(`/api/referrals/${id}`, {[m
[32m+[m[32m        method: "PATCH",[m
[32m+[m[32m        headers: { "Content-Type": "application/json" },[m
[32m+[m[32m        body: JSON.stringify({ status: "Denied" }),[m
[32m+[m[32m      })[m
[32m+[m
[32m+[m[32m      if (response.ok) {[m
[32m+[m[32m        await fetchReferrals()[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Failed to deny referral:", error)[m
[32m+[m[32m    }[m
   }[m
 [m
[31m-  const handleRequestAuth = (id: string) => {[m
[31m-    setReferrals((prev) => prev.map((r) => (r.id === id ? { ...r, status: "Pending Auth" } : r)))[m
[32m+[m[32m  const handleRequestAuth = async (id: string) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      const response = await fetch(`/api/referrals/${id}`, {[m
[32m+[m[32m        method: "PATCH",[m
[32m+[m[32m        headers: { "Content-Type": "application/json" },[m
[32m+[m[32m        body: JSON.stringify({ status: "Pending Auth" }),[m
[32m+[m[32m      })[m
[32m+[m
[32m+[m[32m      if (response.ok) {[m
[32m+[m[32m        await fetchReferrals()[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Failed to request auth:", error)[m
[32m+[m[32m    }[m
   }[m
 [m
   const getStatusColor = (status: string) => {[m
